% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/halton.frame.r
\name{halton.frame}
\alias{halton.frame}
\title{Construction of sampling frame from a Halton lattice and indicies.}
\usage{
halton.frame(hl.points, order.name = "SDraw.siteID")
}
\arguments{
\item{hl.points}{Either a data frame or a \code{SpatialPointsDataFrame} object.  In 
particular, the output of \code{halton.indicies} is acceptable.
The data frame, or data frame of the \code{SpatialPointsDataFrame}, 
must contain the Halton indicies, which is assumed to be named 
\code{attr(hl.points, "index.name")}.  The default name for this column when using output from 
\code{halton.indicies} is \code{SDraw.HaltonIndex}.  Each row of the data frame is a sampling unit
to be included in the frame, and the Halton index of the unit is the Halton box 
the unit falls in. A \code{SpatialPoints} object without the data frame is not 
acceptable.}

\item{order.name}{Name of the column in the output object by which the frame should 
be sorted to produce the proper sampling order.  This index is unique to all units.  This 
parameter is saved as an attribute of the output object.}
}
\value{
A data frame suitable for use as a sampling frame. This is a data frame, 
 like \code{hl.points}, but with a new index column separating points in the same Halton box.  
 The output data frame is sorted by the new indicies.  New indicies are in column 
 specified by the "order.name" attribute (i.e., \code{attr(obj, "order.name")} ).
}
\description{
Makes a Halton frame from a set of points that have  
their Halton indicies attached. This function uses a Halton index column
to identify points in the same Halton box,  and 
randomly adds Halton cycles to separate geographically nearby points in the frame. 
The frame is then sorted by the new frame indicies for sampling.
}
\examples{
# This is the "brute force" method to draw HAL samples. hal.point does all this.

# Define Halton lattice
attr(WA.cities,"J") <- c(6,3)
attr(WA.cities,"bases") <- c(2,3)
# Add tiny amount to right and top of bounding box because Halton boxes are 
# closed on the left and bottom.  This includes points exactly on the bounding lines.
attr(WA.cities,"hl.bbox") <- bbox(WA.cities) + c(0,0,1,1) 

# Compute Halton indicies
frame <- halton.indicies( WA.cities )

# Separate points in frame that are in same box
frame <- halton.frame( frame )

# Draw sample of size 20
n <- 20
random.start <- floor( runif(1,0,nrow(frame)-1 ) )
samp <- frame[ ( ((0:(n-1))+random.start) \%\% nrow(frame) ) + 1, ]

}
\author{
Trent McDonald
}
\seealso{
\code{\link{halton.indicies}}
}

